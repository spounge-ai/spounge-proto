// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: vector_db/v2/vector_db.proto

package vector_dbv2

import (
	v2 "github.com/spounge-ai/spounge-proto/gen/go/common/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values        []float32              `protobuf:"fixed32,2,rep,packed,name=values,proto3" json:"values,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{0}
}

func (x *Vector) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vector) GetValues() []float32 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Vector) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type QueryResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score         float32                `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{1}
}

func (x *QueryResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *QueryResult) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpsertRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Vectors        []*Vector              `protobuf:"bytes,2,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpsertRequest) GetVectors() []*Vector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v2.Status             `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	UpsertedCount int32                  `protobuf:"varint,2,opt,name=upserted_count,json=upsertedCount,proto3" json:"upserted_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{3}
}

func (x *UpsertResponse) GetStatus() *v2.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *UpsertResponse) GetUpsertedCount() int32 {
	if x != nil {
		return x.UpsertedCount
	}
	return 0
}

type QueryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	QueryVector    []float32              `protobuf:"fixed32,2,rep,packed,name=query_vector,json=queryVector,proto3" json:"query_vector,omitempty"`
	TopK           int32                  `protobuf:"varint,3,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	Filter         *structpb.Struct       `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *QueryRequest) GetQueryVector() []float32 {
	if x != nil {
		return x.QueryVector
	}
	return nil
}

func (x *QueryRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *QueryRequest) GetFilter() *structpb.Struct {
	if x != nil {
		return x.Filter
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *v2.Status             `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Results       []*QueryResult         `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_db_v2_vector_db_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_vector_db_v2_vector_db_proto_rawDescGZIP(), []int{5}
}

func (x *QueryResponse) GetStatus() *v2.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *QueryResponse) GetResults() []*QueryResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_vector_db_v2_vector_db_proto protoreflect.FileDescriptor

const file_vector_db_v2_vector_db_proto_rawDesc = "" +
	"\n" +
	"\x1cvector_db/v2/vector_db.proto\x12\fvector_db.v2\x1a\x16common/v2/common.proto\x1a\x1cgoogle/protobuf/struct.proto\"e\n" +
	"\x06Vector\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06values\x18\x02 \x03(\x02R\x06values\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"h\n" +
	"\vQueryResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x02R\x05score\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"h\n" +
	"\rUpsertRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12.\n" +
	"\avectors\x18\x02 \x03(\v2\x14.vector_db.v2.VectorR\avectors\"b\n" +
	"\x0eUpsertResponse\x12)\n" +
	"\x06status\x18\x01 \x01(\v2\x11.common.v2.StatusR\x06status\x12%\n" +
	"\x0eupserted_count\x18\x02 \x01(\x05R\rupsertedCount\"\xb0\x01\n" +
	"\fQueryRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12!\n" +
	"\fquery_vector\x18\x02 \x03(\x02R\vqueryVector\x12\x13\n" +
	"\x05top_k\x18\x03 \x01(\x05R\x04topK\x124\n" +
	"\x06filter\x18\x04 \x01(\v2\x17.google.protobuf.StructH\x00R\x06filter\x88\x01\x01B\t\n" +
	"\a_filter\"o\n" +
	"\rQueryResponse\x12)\n" +
	"\x06status\x18\x01 \x01(\v2\x11.common.v2.StatusR\x06status\x123\n" +
	"\aresults\x18\x02 \x03(\v2\x19.vector_db.v2.QueryResultR\aresults2\x9c\x01\n" +
	"\x0fVectorDBService\x12E\n" +
	"\x06Upsert\x12\x1b.vector_db.v2.UpsertRequest\x1a\x1c.vector_db.v2.UpsertResponse\"\x00\x12B\n" +
	"\x05Query\x12\x1a.vector_db.v2.QueryRequest\x1a\x1b.vector_db.v2.QueryResponse\"\x00B\xb3\x01\n" +
	"\x10com.vector_db.v2B\rVectorDbProtoP\x01ZCgithub.com/spounge-ai/spounge-proto/gen/go/vector_db/v2;vector_dbv2\xa2\x02\x03VXX\xaa\x02\vVectorDb.V2\xca\x02\vVectorDb\\V2\xe2\x02\x17VectorDb\\V2\\GPBMetadata\xea\x02\fVectorDb::V2b\x06proto3"

var (
	file_vector_db_v2_vector_db_proto_rawDescOnce sync.Once
	file_vector_db_v2_vector_db_proto_rawDescData []byte
)

func file_vector_db_v2_vector_db_proto_rawDescGZIP() []byte {
	file_vector_db_v2_vector_db_proto_rawDescOnce.Do(func() {
		file_vector_db_v2_vector_db_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vector_db_v2_vector_db_proto_rawDesc), len(file_vector_db_v2_vector_db_proto_rawDesc)))
	})
	return file_vector_db_v2_vector_db_proto_rawDescData
}

var file_vector_db_v2_vector_db_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vector_db_v2_vector_db_proto_goTypes = []any{
	(*Vector)(nil),          // 0: vector_db.v2.Vector
	(*QueryResult)(nil),     // 1: vector_db.v2.QueryResult
	(*UpsertRequest)(nil),   // 2: vector_db.v2.UpsertRequest
	(*UpsertResponse)(nil),  // 3: vector_db.v2.UpsertResponse
	(*QueryRequest)(nil),    // 4: vector_db.v2.QueryRequest
	(*QueryResponse)(nil),   // 5: vector_db.v2.QueryResponse
	(*structpb.Struct)(nil), // 6: google.protobuf.Struct
	(*v2.Status)(nil),       // 7: common.v2.Status
}
var file_vector_db_v2_vector_db_proto_depIdxs = []int32{
	6, // 0: vector_db.v2.Vector.metadata:type_name -> google.protobuf.Struct
	6, // 1: vector_db.v2.QueryResult.metadata:type_name -> google.protobuf.Struct
	0, // 2: vector_db.v2.UpsertRequest.vectors:type_name -> vector_db.v2.Vector
	7, // 3: vector_db.v2.UpsertResponse.status:type_name -> common.v2.Status
	6, // 4: vector_db.v2.QueryRequest.filter:type_name -> google.protobuf.Struct
	7, // 5: vector_db.v2.QueryResponse.status:type_name -> common.v2.Status
	1, // 6: vector_db.v2.QueryResponse.results:type_name -> vector_db.v2.QueryResult
	2, // 7: vector_db.v2.VectorDBService.Upsert:input_type -> vector_db.v2.UpsertRequest
	4, // 8: vector_db.v2.VectorDBService.Query:input_type -> vector_db.v2.QueryRequest
	3, // 9: vector_db.v2.VectorDBService.Upsert:output_type -> vector_db.v2.UpsertResponse
	5, // 10: vector_db.v2.VectorDBService.Query:output_type -> vector_db.v2.QueryResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_vector_db_v2_vector_db_proto_init() }
func file_vector_db_v2_vector_db_proto_init() {
	if File_vector_db_v2_vector_db_proto != nil {
		return
	}
	file_vector_db_v2_vector_db_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vector_db_v2_vector_db_proto_rawDesc), len(file_vector_db_v2_vector_db_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vector_db_v2_vector_db_proto_goTypes,
		DependencyIndexes: file_vector_db_v2_vector_db_proto_depIdxs,
		MessageInfos:      file_vector_db_v2_vector_db_proto_msgTypes,
	}.Build()
	File_vector_db_v2_vector_db_proto = out.File
	file_vector_db_v2_vector_db_proto_goTypes = nil
	file_vector_db_v2_vector_db_proto_depIdxs = nil
}
