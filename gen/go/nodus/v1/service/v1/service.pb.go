// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: nodus/v1/service/v1/service.proto

package servicev1

import (
	_ "github.com/spounge-ai/spounge-proto/gen/go/google/api"
	v11 "github.com/spounge-ai/spounge-proto/gen/go/nodus/v1/mcp/v1"
	v1 "github.com/spounge-ai/spounge-proto/gen/go/nodus/v1/nodes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckHealthResponse_ServingStatus int32

const (
	CheckHealthResponse_SERVING_STATUS_UNKNOWN_UNSPECIFIED CheckHealthResponse_ServingStatus = 0
	CheckHealthResponse_SERVING_STATUS_SERVING             CheckHealthResponse_ServingStatus = 1
	CheckHealthResponse_SERVING_STATUS_NOT_SERVING         CheckHealthResponse_ServingStatus = 2
)

// Enum value maps for CheckHealthResponse_ServingStatus.
var (
	CheckHealthResponse_ServingStatus_name = map[int32]string{
		0: "SERVING_STATUS_UNKNOWN_UNSPECIFIED",
		1: "SERVING_STATUS_SERVING",
		2: "SERVING_STATUS_NOT_SERVING",
	}
	CheckHealthResponse_ServingStatus_value = map[string]int32{
		"SERVING_STATUS_UNKNOWN_UNSPECIFIED": 0,
		"SERVING_STATUS_SERVING":             1,
		"SERVING_STATUS_NOT_SERVING":         2,
	}
)

func (x CheckHealthResponse_ServingStatus) Enum() *CheckHealthResponse_ServingStatus {
	p := new(CheckHealthResponse_ServingStatus)
	*p = x
	return p
}

func (x CheckHealthResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckHealthResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_nodus_v1_service_v1_service_proto_enumTypes[0].Descriptor()
}

func (CheckHealthResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_nodus_v1_service_v1_service_proto_enumTypes[0]
}

func (x CheckHealthResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckHealthResponse_ServingStatus.Descriptor instead.
func (CheckHealthResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_nodus_v1_service_v1_service_proto_rawDescGZIP(), []int{1, 0}
}

type CheckHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckHealthRequest) Reset() {
	*x = CheckHealthRequest{}
	mi := &file_nodus_v1_service_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthRequest) ProtoMessage() {}

func (x *CheckHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodus_v1_service_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthRequest.ProtoReflect.Descriptor instead.
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return file_nodus_v1_service_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *CheckHealthRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type CheckHealthResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        CheckHealthResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=nodus.v1.service.v1.CheckHealthResponse_ServingStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckHealthResponse) Reset() {
	*x = CheckHealthResponse{}
	mi := &file_nodus_v1_service_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckHealthResponse) ProtoMessage() {}

func (x *CheckHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodus_v1_service_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckHealthResponse.ProtoReflect.Descriptor instead.
func (*CheckHealthResponse) Descriptor() ([]byte, []int) {
	return file_nodus_v1_service_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *CheckHealthResponse) GetStatus() CheckHealthResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return CheckHealthResponse_SERVING_STATUS_UNKNOWN_UNSPECIFIED
}

var File_nodus_v1_service_v1_service_proto protoreflect.FileDescriptor

const file_nodus_v1_service_v1_service_proto_rawDesc = "" +
	"\n" +
	"!nodus/v1/service/v1/service.proto\x12\x13nodus.v1.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a!nodus/v1/nodes/v1/execution.proto\x1a nodus/v1/mcp/v1/connection.proto\".\n" +
	"\x12CheckHealthRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xda\x01\n" +
	"\x13CheckHealthResponse\x12N\n" +
	"\x06status\x18\x01 \x01(\x0e26.nodus.v1.service.v1.CheckHealthResponse.ServingStatusR\x06status\"s\n" +
	"\rServingStatus\x12&\n" +
	"\"SERVING_STATUS_UNKNOWN_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SERVING_STATUS_SERVING\x10\x01\x12\x1e\n" +
	"\x1aSERVING_STATUS_NOT_SERVING\x10\x022\x9c\x06\n" +
	"\fNodusService\x12z\n" +
	"\vExecuteNode\x12%.nodus.v1.nodes.v1.ExecuteNodeRequest\x1a&.nodus.v1.nodes.v1.ExecuteNodeResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/nodes:execute\x12\x94\x01\n" +
	"\x11ExecuteNodeStream\x12+.nodus.v1.nodes.v1.ExecuteNodeStreamRequest\x1a,.nodus.v1.nodes.v1.ExecuteNodeStreamResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/nodes:executeStream0\x01\x12\x8f\x01\n" +
	"\x11RegisterMCPServer\x12).nodus.v1.mcp.v1.RegisterMCPServerRequest\x1a*.nodus.v1.mcp.v1.RegisterMCPServerResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/mcp/servers:register\x12z\n" +
	"\x0eListMCPServers\x12&.nodus.v1.mcp.v1.ListMCPServersRequest\x1a'.nodus.v1.mcp.v1.ListMCPServersResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/mcp/servers\x12u\n" +
	"\rQueryMCPTools\x12%.nodus.v1.mcp.v1.QueryMCPToolsRequest\x1a&.nodus.v1.mcp.v1.QueryMCPToolsResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/mcp/tools\x12t\n" +
	"\vCheckHealth\x12'.nodus.v1.service.v1.CheckHealthRequest\x1a(.nodus.v1.service.v1.CheckHealthResponse\"\x12\x82\xd3\xe4\x93\x02\f\x12\n" +
	"/v1/healthB\xe0\x01\n" +
	"\x17com.nodus.v1.service.v1B\fServiceProtoP\x01ZHgithub.com/spounge-ai/spounge-proto/gen/go/nodus/v1/service/v1;servicev1\xa2\x02\x03NVS\xaa\x02\x13Nodus.V1.Service.V1\xca\x02\x13Nodus\\V1\\Service\\V1\xe2\x02\x1fNodus\\V1\\Service\\V1\\GPBMetadata\xea\x02\x16Nodus::V1::Service::V1b\x06proto3"

var (
	file_nodus_v1_service_v1_service_proto_rawDescOnce sync.Once
	file_nodus_v1_service_v1_service_proto_rawDescData []byte
)

func file_nodus_v1_service_v1_service_proto_rawDescGZIP() []byte {
	file_nodus_v1_service_v1_service_proto_rawDescOnce.Do(func() {
		file_nodus_v1_service_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nodus_v1_service_v1_service_proto_rawDesc), len(file_nodus_v1_service_v1_service_proto_rawDesc)))
	})
	return file_nodus_v1_service_v1_service_proto_rawDescData
}

var file_nodus_v1_service_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nodus_v1_service_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_nodus_v1_service_v1_service_proto_goTypes = []any{
	(CheckHealthResponse_ServingStatus)(0), // 0: nodus.v1.service.v1.CheckHealthResponse.ServingStatus
	(*CheckHealthRequest)(nil),             // 1: nodus.v1.service.v1.CheckHealthRequest
	(*CheckHealthResponse)(nil),            // 2: nodus.v1.service.v1.CheckHealthResponse
	(*v1.ExecuteNodeRequest)(nil),          // 3: nodus.v1.nodes.v1.ExecuteNodeRequest
	(*v1.ExecuteNodeStreamRequest)(nil),    // 4: nodus.v1.nodes.v1.ExecuteNodeStreamRequest
	(*v11.RegisterMCPServerRequest)(nil),   // 5: nodus.v1.mcp.v1.RegisterMCPServerRequest
	(*v11.ListMCPServersRequest)(nil),      // 6: nodus.v1.mcp.v1.ListMCPServersRequest
	(*v11.QueryMCPToolsRequest)(nil),       // 7: nodus.v1.mcp.v1.QueryMCPToolsRequest
	(*v1.ExecuteNodeResponse)(nil),         // 8: nodus.v1.nodes.v1.ExecuteNodeResponse
	(*v1.ExecuteNodeStreamResponse)(nil),   // 9: nodus.v1.nodes.v1.ExecuteNodeStreamResponse
	(*v11.RegisterMCPServerResponse)(nil),  // 10: nodus.v1.mcp.v1.RegisterMCPServerResponse
	(*v11.ListMCPServersResponse)(nil),     // 11: nodus.v1.mcp.v1.ListMCPServersResponse
	(*v11.QueryMCPToolsResponse)(nil),      // 12: nodus.v1.mcp.v1.QueryMCPToolsResponse
}
var file_nodus_v1_service_v1_service_proto_depIdxs = []int32{
	0,  // 0: nodus.v1.service.v1.CheckHealthResponse.status:type_name -> nodus.v1.service.v1.CheckHealthResponse.ServingStatus
	3,  // 1: nodus.v1.service.v1.NodusService.ExecuteNode:input_type -> nodus.v1.nodes.v1.ExecuteNodeRequest
	4,  // 2: nodus.v1.service.v1.NodusService.ExecuteNodeStream:input_type -> nodus.v1.nodes.v1.ExecuteNodeStreamRequest
	5,  // 3: nodus.v1.service.v1.NodusService.RegisterMCPServer:input_type -> nodus.v1.mcp.v1.RegisterMCPServerRequest
	6,  // 4: nodus.v1.service.v1.NodusService.ListMCPServers:input_type -> nodus.v1.mcp.v1.ListMCPServersRequest
	7,  // 5: nodus.v1.service.v1.NodusService.QueryMCPTools:input_type -> nodus.v1.mcp.v1.QueryMCPToolsRequest
	1,  // 6: nodus.v1.service.v1.NodusService.CheckHealth:input_type -> nodus.v1.service.v1.CheckHealthRequest
	8,  // 7: nodus.v1.service.v1.NodusService.ExecuteNode:output_type -> nodus.v1.nodes.v1.ExecuteNodeResponse
	9,  // 8: nodus.v1.service.v1.NodusService.ExecuteNodeStream:output_type -> nodus.v1.nodes.v1.ExecuteNodeStreamResponse
	10, // 9: nodus.v1.service.v1.NodusService.RegisterMCPServer:output_type -> nodus.v1.mcp.v1.RegisterMCPServerResponse
	11, // 10: nodus.v1.service.v1.NodusService.ListMCPServers:output_type -> nodus.v1.mcp.v1.ListMCPServersResponse
	12, // 11: nodus.v1.service.v1.NodusService.QueryMCPTools:output_type -> nodus.v1.mcp.v1.QueryMCPToolsResponse
	2,  // 12: nodus.v1.service.v1.NodusService.CheckHealth:output_type -> nodus.v1.service.v1.CheckHealthResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_nodus_v1_service_v1_service_proto_init() }
func file_nodus_v1_service_v1_service_proto_init() {
	if File_nodus_v1_service_v1_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nodus_v1_service_v1_service_proto_rawDesc), len(file_nodus_v1_service_v1_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodus_v1_service_v1_service_proto_goTypes,
		DependencyIndexes: file_nodus_v1_service_v1_service_proto_depIdxs,
		EnumInfos:         file_nodus_v1_service_v1_service_proto_enumTypes,
		MessageInfos:      file_nodus_v1_service_v1_service_proto_msgTypes,
	}.Build()
	File_nodus_v1_service_v1_service_proto = out.File
	file_nodus_v1_service_v1_service_proto_goTypes = nil
	file_nodus_v1_service_v1_service_proto_depIdxs = nil
}
